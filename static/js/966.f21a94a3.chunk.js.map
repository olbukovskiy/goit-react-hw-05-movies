{"version":3,"file":"static/js/966.f21a94a3.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.js","components/services/API.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 100000;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport function Loader() {\n  return (\n    <LoaderContainer>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </LoaderContainer>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '9d6e6ee2eca71a277d41288e53d88a97';\n\nexport class SearchMoviesAPI {\n  searchTrendingMovies = async page => {\n    const url = `trending/movie/week?api_key=${KEY}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovies = async (page, searchQuery) => {\n    const url = `search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieDetails = async movieId => {\n    const url = `movie/${movieId}?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieCredits = async movieId => {\n    const url = `movie/${movieId}/credits?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieReviews = async movieId => {\n    const url = `movie/${movieId}/reviews?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchGenres = async () => {\n    const url = `genre/movie/list?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function titleOptimizer(title, name) {\n  if (title) {\n    return title;\n  }\n\n  if (name) {\n    return name;\n  }\n\n  return 'The best film in your life! :)';\n}\n\nexport function dateOptimizer(releaseDate, firstDate) {\n  if (releaseDate) {\n    return releaseDate.slice(0, 4);\n  }\n\n  if (firstDate) {\n    return firstDate.slice(0, 4);\n  }\n\n  return 'Coming soon! :)';\n}\n\nexport function picturePathPlace(path) {\n  if (path == null) {\n    return 'https://via.placeholder.com/500x600.svg/000000/ffffff?text=Sorry+,+image+loading+is+failed';\n  }\n\n  return `https://image.tmdb.org/t/p/w500${path}`;\n}\n\nexport function findGenres(genres, genreIds) {\n  const genresArray = [];\n\n  if (!genreIds) {\n    return 'Other';\n  }\n\n  for (let id of genreIds) {\n    let item = genres.find(genre => genre.id === id);\n    if (item === undefined) {\n      continue;\n    } else {\n      genresArray.push(item.name);\n    }\n  }\n\n  if (genresArray.length === 0) {\n    genresArray.push('Other');\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n\nexport function movieDetailsGenres(genres) {\n  const genresArray = [];\n\n  for (let genre of genres) {\n    genresArray.push(genre.name);\n  }\n\n  if (genresArray.length === 0) {\n    return 'Other';\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const StyledLink = styled(Link)`\n  position: sticky;\n  z-index: 10000;\n  top: 100px;\n  left: 48px;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 16px;\n  border-radius: 5px;\n  border: 1px solid #000;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  background-color: #fff;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MovieDetailsContainer = styled.div`\n  margin-top: 14px;\n  margin-left: auto;\n  margin-right: auto;\n\n  max-width: calc(100% - 96px);\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 32px;\n  margin-bottom: 32px;\n`;\n\nexport const MovieDetailsImage = styled.div`\n  height: 600px;\n`;\n\nexport const MovieDetailsWrapper = styled.div`\n  width: 60%;\n  max-width: 800px;\n`;\n\nexport const MovieDetailsInfo = styled.div``;\n\nexport const MovieDetailsTitle = styled.h2`\n  font-size: 32px;\n  margin-bottom: 18px;\n`;\n\nexport const MovieDetailsSubsectionTitle = styled.h3`\n  margin-top: 26px;\n  margin-bottom: 16px;\n  font-size: 24px;\n`;\n\nexport const MovieDetailsText = styled.p`\n  font-size: 18px;\n  margin-bottom: 12px;\n  line-height: 1.5;\n`;\n\nexport const MovieDetailsTextModifier = styled.span`\n  color: orangered;\n  font-weight: 600;\n`;\n\nexport const MovieDetailsList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 18px;\n`;\n\nexport const MovieDetailsListItem = styled.li`\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.5;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: orangered;\n  }\n`;\n","import { useState, useMemo, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport {\n  movieDetailsGenres,\n  picturePathPlace,\n  SearchMoviesAPI,\n} from 'components/services/API';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { BackLink } from 'components/BackLink/BackLink';\n\nimport {\n  MovieDetailsContainer,\n  MovieDetailsImage,\n  MovieDetailsInfo,\n  MovieDetailsTitle,\n  MovieDetailsText,\n  MovieDetailsSubsectionTitle,\n  MovieDetailsTextModifier,\n  MovieDetailsList,\n  MovieDetailsListItem,\n  MovieDetailsWrapper,\n  MovieWrapper,\n} from './MovieDetails.styled';\n\nconst MoviesAPI = new SearchMoviesAPI();\n\nexport function MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useMemo(\n    () =>\n      MoviesAPI.searchMovieDetails(movieId).then(response =>\n        setMovieDetails(response.data)\n      ),\n    [movieId]\n  );\n\n  return (\n    <>\n      {movieDetails && (\n        <div>\n          <BackLink to={backLinkHref}>Back</BackLink>\n          <MovieDetailsContainer>\n            <MovieWrapper>\n              <MovieDetailsImage>\n                <img\n                  src={picturePathPlace(movieDetails.poster_path)}\n                  alt={movieDetails.title}\n                />\n              </MovieDetailsImage>\n              <MovieDetailsWrapper>\n                <MovieDetailsInfo>\n                  <MovieDetailsTitle>{movieDetails.title}</MovieDetailsTitle>\n                  <MovieDetailsText>\n                    Movie rating:{' '}\n                    <MovieDetailsTextModifier>\n                      {movieDetails.vote_average.toFixed(1)}\n                    </MovieDetailsTextModifier>\n                  </MovieDetailsText>\n                  <MovieDetailsText>\n                    Votes:{' '}\n                    <MovieDetailsTextModifier>\n                      {movieDetails.vote_count}\n                    </MovieDetailsTextModifier>\n                  </MovieDetailsText>\n                  <div>\n                    <MovieDetailsSubsectionTitle>\n                      Overview\n                    </MovieDetailsSubsectionTitle>\n                    <MovieDetailsText>{movieDetails.overview}</MovieDetailsText>\n                  </div>\n                  <div>\n                    <MovieDetailsSubsectionTitle>\n                      Genres\n                    </MovieDetailsSubsectionTitle>\n                    <MovieDetailsText>\n                      {movieDetailsGenres(movieDetails.genres)}\n                    </MovieDetailsText>\n                  </div>\n                </MovieDetailsInfo>\n                <MovieDetailsList>\n                  <MovieDetailsListItem>\n                    <Link to=\"cast\">Cast</Link>\n                  </MovieDetailsListItem>\n                  <MovieDetailsListItem>\n                    <Link to=\"reviews\">Reviews</Link>\n                  </MovieDetailsListItem>\n                </MovieDetailsList>\n              </MovieDetailsWrapper>\n            </MovieWrapper>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </MovieDetailsContainer>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["LoaderContainer","styled","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","axios","KEY","SearchMoviesAPI","searchTrendingMovies","page","url","response","console","log","searchMovies","searchQuery","searchMovieDetails","movieId","searchMovieCredits","searchMovieReviews","searchGenres","titleOptimizer","title","name","dateOptimizer","releaseDate","firstDate","slice","picturePathPlace","path","findGenres","genres","genreIds","genresArray","id","item","find","genre","undefined","push","length","join","movieDetailsGenres","StyledLink","Link","BackLink","to","children","size","MovieDetailsContainer","MovieWrapper","MovieDetailsImage","MovieDetailsWrapper","MovieDetailsInfo","MovieDetailsTitle","MovieDetailsSubsectionTitle","MovieDetailsText","MovieDetailsTextModifier","MovieDetailsList","MovieDetailsListItem","MoviesAPI","MovieDetails","useState","movieDetails","setMovieDetails","useParams","backLinkHref","useLocation","state","from","useMemo","then","data","src","poster_path","alt","vote_average","toFixed","vote_count","overview","Suspense","fallback"],"sourceRoot":""}