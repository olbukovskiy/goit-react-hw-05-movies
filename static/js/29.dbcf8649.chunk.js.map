{"version":3,"file":"static/js/29.dbcf8649.chunk.js","mappings":"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","sources":["components/Finish/Finish.styled.js","components/Finish/Finish.js","Box.js","components/Movie/Movie.styled.jsx","components/Movie/Movie.js","components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.js","components/services/API.js","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { GiFinishLine } from 'react-icons/gi';\n\nexport const FinishText = styled.p`\n  font: inherit;\n  font-size: 18px;\n`;\n\nexport const FinishContainer = styled.div`\n  margin: 36px auto;\n`;\n\nexport const FinishIcon = styled(GiFinishLine)`\n  width: 48px;\n  fill: tomato;\n`;\n","import { FinishContainer, FinishText, FinishIcon } from './Finish.styled';\n\nexport function Finish() {\n  return (\n    <FinishContainer>\n      <FinishText>\n        We're sorry, but you've reached the end of search results.\n        <FinishIcon />\n      </FinishText>\n    </FinishContainer>\n  );\n}\n","import styled from '@emotion/styled';\nimport {\n  space,\n  layout,\n  color,\n  typography,\n  flexbox,\n  shadow,\n  background,\n  border,\n  position,\n  grid,\n} from 'styled-system';\n\nconst Box = styled.div`\n  ${space}\n  ${layout}\n  ${color}\n  ${typography}\n  ${flexbox}\n  ${background}\n  ${border}\n  ${position}\n  ${shadow}\n  ${grid}\n`;\n\nexport default Box;\n","import styled from '@emotion/styled';\n\nexport const MovieListItemContainer = styled.div`\n  max-width: 500px;\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  height: 100%;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const MovieListItemImage = styled.div`\n  position: relative;\n  margin-bottom: ${props => props.theme.space[3]}px;\n  height: 500px;\n`;\n\n\nexport const MoviesListData = styled.div`\n  padding: 0 10px 10px 10px;\n`;\n\nexport const MovieHeading = styled.h2`\n  margin-bottom: ${props => props.theme.space[2]}px;\n`;\n\nexport const MovieData = styled.p`\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.space[1]}px;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  findGenres,\n  dateOptimizer,\n  picturePathPlace,\n  titleOptimizer,\n} from 'components/services/API';\n\nimport {\n  MovieListItemContainer,\n  MovieListItemImage,\n  MoviesListData,\n  MovieHeading,\n  MovieData,\n} from './Movie.styled';\n\nexport function Movie({ movieInfo, genres }) {\n  const { poster_path, title, name, genre_ids, release_date, first_air_date } =\n    movieInfo;\n  return (\n    <MovieListItemContainer>\n      <MovieListItemImage>\n        <img\n          src={picturePathPlace(poster_path)}\n          alt={titleOptimizer(title, name)}\n        />\n      </MovieListItemImage>\n      <MoviesListData>\n        <MovieHeading>{titleOptimizer(title, name)}</MovieHeading>\n        <MovieData>\n          <span>{findGenres(genres, genre_ids)}</span>\n          <span>&#10072;</span>\n          <span>{dateOptimizer(release_date, first_air_date)}</span>\n        </MovieData>\n      </MoviesListData>\n    </MovieListItemContainer>\n  );\n}\n\nMovie.propTypes = {\n  movieInfo: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    genre_ids: PropTypes.arrayOf(PropTypes.number).isRequired,\n    release_date: PropTypes.string,\n    first_air_date: PropTypes.string,\n  }).isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100% - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 24px;\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Box from 'Box';\nimport { Movie } from 'components/Movie/Movie';\nimport { MovieList } from './MovieList.styled';\n\nexport function MoviesList({ movies, genres, from }) {\n  const location = useLocation();\n  return (\n    <Box p={4}>\n      <MovieList>\n        {from === 'home'\n          ? movies.map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link to={`movies/${movie.id}`} state={{ from: location }}>\n                    <Movie movieInfo={movie} genres={genres} />\n                  </Link>\n                </li>\n              );\n            })\n          : movies.map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link to={`${movie.id}`} state={{ from: location }}>\n                    <Movie movieInfo={movie} genres={genres} />\n                  </Link>\n                </li>\n              );\n            })}\n      </MovieList>\n    </Box>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      genre_ids: PropTypes.arrayOf(PropTypes.number).isRequired,\n      release_date: PropTypes.string,\n      first_air_date: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  from: PropTypes.string,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '9d6e6ee2eca71a277d41288e53d88a97';\n\nexport class SearchMoviesAPI {\n  searchTrendingMovies = async page => {\n    const url = `trending/movie/week?api_key=${KEY}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovies = async (page, searchQuery) => {\n    const url = `search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieDetails = async movieId => {\n    const url = `movie/${movieId}?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieCredits = async movieId => {\n    const url = `movie/${movieId}/credits?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieReviews = async movieId => {\n    const url = `movie/${movieId}/reviews?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchGenres = async () => {\n    const url = `genre/movie/list?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function titleOptimizer(title, name) {\n  if (title) {\n    return title;\n  }\n\n  if (name) {\n    return name;\n  }\n\n  return 'The best film in your life! :)';\n}\n\nexport function dateOptimizer(releaseDate, firstDate) {\n  if (releaseDate) {\n    return releaseDate.slice(0, 4);\n  }\n\n  if (firstDate) {\n    return firstDate.slice(0, 4);\n  }\n\n  return 'Coming soon! :)';\n}\n\nexport function picturePathPlace(path) {\n  if (path == null) {\n    return 'https://via.placeholder.com/500x600.svg/000000/ffffff?text=Sorry+,+image+loading+is+failed';\n  }\n\n  return `https://image.tmdb.org/t/p/w500${path}`;\n}\n\nexport function findGenres(genres, genreIds) {\n  const genresArray = [];\n\n  if (!genreIds) {\n    return 'Other';\n  }\n\n  for (let id of genreIds) {\n    let item = genres.find(genre => genre.id === id);\n    if (item === undefined) {\n      continue;\n    } else {\n      genresArray.push(item.name);\n    }\n  }\n\n  if (genresArray.length === 0) {\n    genresArray.push('Other');\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n\nexport function movieDetailsGenres(genres) {\n  const genresArray = [];\n\n  for (let genre of genres) {\n    genresArray.push(genre.name);\n  }\n\n  if (genresArray.length === 0) {\n    return 'Other';\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport { GoSearch } from 'react-icons/go';\n\nexport const SearchIcon = styled(GoSearch)`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const SearchbarContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  border: 1px solid #e9e8e8;\n  overflow: hidden;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SearchFormButton = styled.button`\n  position: relative;\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  height: 48px;\n  font: inherit;\n  font-size: 20px;\n  outline: none;\n  border: none;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Formik } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport {\n  SearchIcon,\n  SearchForm,\n  SearchbarContainer,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './SearchBox.styled';\n\nconst initialValues = { search: '' };\n\nexport function SearchBox({ onSubmit, value }) {\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          actions.setFieldValue('search', value);\n          actions.setSubmitting(false);\n          actions.resetForm();\n          onSubmit(values.search);\n        }}\n      >\n        {({ isSubmitting }) => {\n          return (\n            <SearchbarContainer>\n              <SearchForm>\n                <SearchFormInput\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  name=\"search\"\n                  placeholder=\"Search films and serials\"\n                />\n                <SearchFormButton type=\"submit\" disabled={isSubmitting}>\n                  <SearchIcon />\n                  <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n                </SearchFormButton>\n              </SearchForm>\n            </SearchbarContainer>\n          );\n        }}\n      </Formik>\n    </>\n  );\n}\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { SearchMoviesAPI } from 'components/services/API';\nimport { Finish } from 'components/Finish/Finish';\n\nconst MoviesAPI = new SearchMoviesAPI();\n\nexport function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  const [isRendered, setIsRendered] = useState(false);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const filmTitle = searchQuery.get('name') ?? '';\n  const from = 'movies';\n\n  useEffect(() => {\n    MoviesAPI.searchGenres().then(response => setGenres(response.data.genres));\n  }, []);\n\n  useEffect(() => {\n    if (filmTitle === '' || !isRendered) {\n      setIsRendered(true);\n      return;\n    }\n\n    MoviesAPI.searchMovies(page, filmTitle).then(response => {\n      setTotalPages(response.data.total_pages);\n      if (response.data.results.length > 0) {\n        toast.success(\n          `Hooray! We found ${response.data.total_results} movies`,\n          {\n            autoClose: 3000,\n          }\n        );\n        setMovies(prevMovies => [...prevMovies, ...response.data.results]);\n      } else {\n        toast.warn('Nothing found for your request', {\n          autoClose: 3000,\n        });\n      }\n    });\n  }, [page, filmTitle, isRendered]);\n\n  const submitHandler = query => {\n    const filmName =\n      query.trim() !== ''\n        ? { name: query }\n        : {} &&\n          toast.error('Sorry, search field if empty :(', { autoClose: 3000 });\n\n    if (query !== filmName) {\n      setMovies([]);\n      setPage(1);\n    }\n\n    setSearchQuery(filmName);\n  };\n\n  const scrollHandler = () => {\n    const { scrollHeight, clientHeight, scrollTop } = document.documentElement;\n\n    if (clientHeight + scrollTop + 1 >= scrollHeight) {\n      setPage(prevPage => prevPage + 1);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollHandler);\n    return () => window.removeEventListener('scroll', scrollHandler);\n  }, []);\n\n  return (\n    <div>\n      <SearchBox value={filmTitle} onSubmit={submitHandler} />\n      {movies.length !== 0 && (\n        <div>\n          <MoviesList movies={movies} genres={genres} from={from} />\n        </div>\n      )}\n      {page === totalPages && <Finish />}\n    </div>\n  );\n}\n"],"names":["FinishText","styled","FinishContainer","FinishIcon","GiFinishLine","Finish","space","layout","color","typography","flexbox","background","border","position","shadow","grid","MovieListItemContainer","MovieListItemImage","props","theme","MoviesListData","MovieHeading","MovieData","Movie","movieInfo","genres","poster_path","title","name","genre_ids","release_date","first_air_date","src","picturePathPlace","alt","titleOptimizer","findGenres","dateOptimizer","MovieList","MoviesList","movies","from","location","useLocation","p","map","movie","to","id","state","axios","KEY","SearchMoviesAPI","searchTrendingMovies","page","url","response","console","log","searchMovies","searchQuery","searchMovieDetails","movieId","searchMovieCredits","searchMovieReviews","searchGenres","releaseDate","firstDate","slice","path","genreIds","genresArray","item","find","genre","undefined","push","length","join","movieDetailsGenres","SearchIcon","GoSearch","SearchbarContainer","SearchForm","Form","SearchFormButton","SearchFormButtonLabel","SearchFormInput","Field","initialValues","search","SearchBox","onSubmit","value","values","actions","setFieldValue","setSubmitting","resetForm","isSubmitting","type","autoComplete","placeholder","disabled","MoviesAPI","Movies","useState","setMovies","setGenres","setPage","totalPages","setTotalPages","isRendered","setIsRendered","useSearchParams","setSearchQuery","filmTitle","get","useEffect","then","data","total_pages","results","toast","total_results","autoClose","prevMovies","scrollHandler","document","documentElement","scrollHeight","clientHeight","scrollTop","prevPage","window","addEventListener","removeEventListener","query","filmName","trim"],"sourceRoot":""}