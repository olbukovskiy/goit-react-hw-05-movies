{"version":3,"file":"static/js/485.59e67f26.chunk.js","mappings":"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","sources":["components/CastList/CastList.styled.jsx","components/ReviewsListItem/ReviewsListItem.styled.jsx","components/ReviewsListItem/ReviewsListItem.js","components/ReviewsList/ReviewsList.styled.jsx","components/ReviewsList/ReviewsList.js","components/Reviews/Reviews.js","components/services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastCatalogue = styled.ul`\n  display: grid;\n  max-width: calc(100% - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 18px;\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const CastCatalogueTitle = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 18px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ReviewListItem = styled.li`\n  padding: 6px 12px;\n`;\n\nexport const ReviewListItemTitle = styled.h3`\n  font-size: 24px;\n  margin-bottom: 18px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { ReviewListItemTitle } from './ReviewsListItem.styled';\nimport { ReviewListItem } from './ReviewsListItem.styled';\nexport function ReviewsListItem({ review }) {\n  return (\n    <ReviewListItem>\n      <ReviewListItemTitle>Author: {review.author}</ReviewListItemTitle>\n      <p>{review.content}</p>\n    </ReviewListItem>\n  );\n}\n\nReviewsListItem.propTypes = {\n  review: PropTypes.shape({\n    author: PropTypes.string,\n    content: PropTypes.string,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n  display: grid;\n  max-width: calc(100% - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(768px, 1fr));\n  grid-gap: 18px;\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n\n`;\n","import PropTypes from 'prop-types';\nimport { ReviewsListItem } from 'components/ReviewsListItem/ReviewsListItem';\nimport { ReviewList } from './ReviewsList.styled';\nimport { CastCatalogueTitle } from 'components/CastList/CastList.styled';\nexport function ReviewsList({ reviews }) {\n  return (\n    <>\n      <CastCatalogueTitle>Reviews</CastCatalogueTitle>\n      <ReviewList>\n        {reviews.map(review => {\n          return <ReviewsListItem key={review.author} review={review} />;\n        })}\n      </ReviewList>\n    </>\n  );\n}\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string,\n      content: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { SearchMoviesAPI } from 'components/services/API';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\n\nconst MoviesAPI = new SearchMoviesAPI();\n\nexport function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    MoviesAPI.searchMovieReviews(movieId).then(resolve =>\n      setReviews(resolve.data.results)\n    );\n  }, [movieId]);\n\n  return (\n    <Fragment>\n      {reviews && (\n        <div>\n          {reviews.length === 0 ? (\n            <div>We don't have any reviews for this movie</div>\n          ) : (\n            <div>\n              <ReviewsList reviews={reviews} />\n            </div>\n          )}\n        </div>\n      )}\n    </Fragment>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '9d6e6ee2eca71a277d41288e53d88a97';\n\nexport class SearchMoviesAPI {\n  searchTrendingMovies = async page => {\n    const url = `trending/movie/week?api_key=${KEY}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovies = async (page, searchQuery) => {\n    const url = `search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieDetails = async movieId => {\n    const url = `movie/${movieId}?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieCredits = async movieId => {\n    const url = `movie/${movieId}/credits?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieReviews = async movieId => {\n    const url = `movie/${movieId}/reviews?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchGenres = async () => {\n    const url = `genre/movie/list?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function titleOptimizer(title, name) {\n  if (title) {\n    return title;\n  }\n\n  if (name) {\n    return name;\n  }\n\n  return 'The best film in your life! :)';\n}\n\nexport function dateOptimizer(releaseDate, firstDate) {\n  if (releaseDate) {\n    return releaseDate.slice(0, 4);\n  }\n\n  if (firstDate) {\n    return firstDate.slice(0, 4);\n  }\n\n  return 'Coming soon! :)';\n}\n\nexport function picturePathPlace(path) {\n  if (path == null) {\n    return 'https://via.placeholder.com/500x600.svg/000000/ffffff?text=Sorry+,+image+loading+is+failed';\n  }\n\n  return `https://image.tmdb.org/t/p/w500${path}`;\n}\n\nexport function findGenres(genres, genreIds) {\n  const genresArray = [];\n\n  if (!genreIds) {\n    return 'Other';\n  }\n\n  for (let id of genreIds) {\n    let item = genres.find(genre => genre.id === id);\n    if (item === undefined) {\n      continue;\n    } else {\n      genresArray.push(item.name);\n    }\n  }\n\n  if (genresArray.length === 0) {\n    genresArray.push('Other');\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n\nexport function movieDetailsGenres(genres) {\n  const genresArray = [];\n\n  for (let genre of genres) {\n    genresArray.push(genre.name);\n  }\n\n  if (genresArray.length === 0) {\n    return 'Other';\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n"],"names":["CastCatalogue","styled","CastCatalogueTitle","ReviewListItem","ReviewListItemTitle","ReviewsListItem","review","author","content","ReviewList","ReviewsList","reviews","map","MoviesAPI","SearchMoviesAPI","Reviews","useState","setReviews","movieId","useParams","useEffect","searchMovieReviews","then","resolve","data","results","Fragment","length","axios","KEY","searchTrendingMovies","page","url","response","console","log","searchMovies","searchQuery","searchMovieDetails","searchMovieCredits","searchGenres","titleOptimizer","title","name","dateOptimizer","releaseDate","firstDate","slice","picturePathPlace","path","findGenres","genres","genreIds","genresArray","id","item","find","genre","undefined","push","join","movieDetailsGenres"],"sourceRoot":""}