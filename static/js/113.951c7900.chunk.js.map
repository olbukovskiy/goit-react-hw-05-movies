{"version":3,"file":"static/js/113.951c7900.chunk.js","mappings":"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","sources":["components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.js","components/CastList/CastList.js","components/Cast/Cast.js","components/CastList/CastList.styled.jsx","components/services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: relative;\n  margin-bottom: ${props => props.theme.space[4]}px;\n  height: 100%;\n`;\n\nexport const CastItemPictureThumb = styled.div`\n  position: relative;\n  height: 320px;\n`;\n\nexport const CastItemTextThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: ${props => props.theme.space[1]}px;\n  padding: 6px 12px;\n  flex-grow: 1;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n\n  border-left: 1px solid #eee;\n  border-right: 1px solid #eee;\n  border-bottom: 1px solid #eee;\n`;\n","import PropTypes from 'prop-types';\n\nimport { picturePathPlace } from 'components/services/API';\nimport {\n  CastItemPictureThumb,\n  CastItemTextThumb,\n  CastThumb,\n} from './CastItem.styled';\n\nexport function CastItem({ name, character, profile_path }) {\n  return (\n    <CastThumb>\n      <CastItemPictureThumb>\n        <img src={picturePathPlace(profile_path)} alt={name} />\n      </CastItemPictureThumb>\n      <CastItemTextThumb>\n        <p>Name: {name}</p>\n        <p>Character: {character}</p>\n      </CastItemTextThumb>\n    </CastThumb>\n  );\n}\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  profile_path: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nimport { CastItem } from 'components/CastItem/CastItem';\nimport { CastCatalogue, CastCatalogueTitle } from './CastList.styled';\n\nexport function CastList({ cast }) {\n  return (\n    <>\n      <CastCatalogueTitle>Full cast</CastCatalogueTitle>\n      <CastCatalogue>\n        {cast.map(({ name, character, profile_path }) => {\n          return (\n            <CastItem\n              key={name}\n              name={name}\n              character={character}\n              profile_path={profile_path}\n            />\n          );\n        })}\n      </CastCatalogue>\n    </>\n  );\n}\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { CastList } from 'components/CastList/CastList';\nimport { SearchMoviesAPI } from 'components/services/API';\n\nconst MoviesAPI = new SearchMoviesAPI();\n\nexport function Cast() {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    MoviesAPI.searchMovieCredits(movieId).then(resolve => {\n      setCast(resolve.data.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <Fragment>\n      {cast && (\n        <div>\n          {cast.length === 0 ? (\n            <div>We don't have any information about this movie crew</div>\n          ) : (\n            <CastList cast={cast} />\n          )}\n        </div>\n      )}\n    </Fragment>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const CastCatalogue = styled.ul`\n  display: grid;\n  max-width: calc(100% - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 18px;\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const CastCatalogueTitle = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 18px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '9d6e6ee2eca71a277d41288e53d88a97';\n\nexport class SearchMoviesAPI {\n  searchTrendingMovies = async page => {\n    const url = `trending/movie/week?api_key=${KEY}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovies = async (page, searchQuery) => {\n    const url = `search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieDetails = async movieId => {\n    const url = `movie/${movieId}?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieCredits = async movieId => {\n    const url = `movie/${movieId}/credits?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieReviews = async movieId => {\n    const url = `movie/${movieId}/reviews?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchGenres = async () => {\n    const url = `genre/movie/list?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function titleOptimizer(title, name) {\n  if (title) {\n    return title;\n  }\n\n  if (name) {\n    return name;\n  }\n\n  return 'The best film in your life! :)';\n}\n\nexport function dateOptimizer(releaseDate, firstDate) {\n  if (releaseDate) {\n    return releaseDate.slice(0, 4);\n  }\n\n  if (firstDate) {\n    return firstDate.slice(0, 4);\n  }\n\n  return 'Coming soon! :)';\n}\n\nexport function picturePathPlace(path) {\n  if (path == null) {\n    return 'https://via.placeholder.com/500x600.svg/000000/ffffff?text=Sorry+,+image+loading+is+failed';\n  }\n\n  return `https://image.tmdb.org/t/p/w500${path}`;\n}\n\nexport function findGenres(genres, genreIds) {\n  const genresArray = [];\n\n  if (!genreIds) {\n    return 'Other';\n  }\n\n  for (let id of genreIds) {\n    let item = genres.find(genre => genre.id === id);\n    if (item === undefined) {\n      continue;\n    } else {\n      genresArray.push(item.name);\n    }\n  }\n\n  if (genresArray.length === 0) {\n    genresArray.push('Other');\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n\nexport function movieDetailsGenres(genres) {\n  const genresArray = [];\n\n  for (let genre of genres) {\n    genresArray.push(genre.name);\n  }\n\n  if (genresArray.length === 0) {\n    return 'Other';\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n"],"names":["CastThumb","styled","props","theme","space","CastItemPictureThumb","CastItemTextThumb","CastItem","name","character","profile_path","src","picturePathPlace","alt","CastList","cast","map","MoviesAPI","SearchMoviesAPI","Cast","useState","setCast","movieId","useParams","useEffect","searchMovieCredits","then","resolve","data","Fragment","length","CastCatalogue","CastCatalogueTitle","axios","KEY","searchTrendingMovies","page","url","response","console","log","searchMovies","searchQuery","searchMovieDetails","searchMovieReviews","searchGenres","titleOptimizer","title","dateOptimizer","releaseDate","firstDate","slice","path","findGenres","genres","genreIds","genresArray","id","item","find","genre","undefined","push","join","movieDetailsGenres"],"sourceRoot":""}